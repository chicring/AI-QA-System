/*
 * This file is generated by jOOQ.
 */
package com.nrapendra.jooq.tables.records;


import com.nrapendra.jooq.tables.TagTb;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * 标签表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TagRecord extends UpdatableRecordImpl<TagRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ai_qa_system.qa_tag.id</code>. 主键ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_tag.id</code>. 主键ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>ai_qa_system.qa_tag.tag_name</code>. 标签名称
     */
    public void setTagName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_tag.tag_name</code>. 标签名称
     */
    public String getTagName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ai_qa_system.qa_tag.category_id</code>. 分类ID
     */
    public void setCategoryId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_tag.category_id</code>. 分类ID
     */
    public Long getCategoryId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>ai_qa_system.qa_tag.sort_num</code>. 排序号
     */
    public void setSortNum(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_tag.sort_num</code>. 排序号
     */
    public UInteger getSortNum() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>ai_qa_system.qa_tag.tag_status</code>. 状态 1:正常 0:禁用
     */
    public void setTagStatus(UInteger value) {
        set(4, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_tag.tag_status</code>. 状态 1:正常 0:禁用
     */
    public UInteger getTagStatus() {
        return (UInteger) get(4);
    }

    /**
     * Setter for <code>ai_qa_system.qa_tag.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_tag.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>ai_qa_system.qa_tag.update_time</code>. 修改时间
     */
    public void setUpdateTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_tag.update_time</code>. 修改时间
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>ai_qa_system.qa_tag.creator</code>. 创建者
     */
    public void setCreator(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_tag.creator</code>. 创建者
     */
    public String getCreator() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TagRecord
     */
    public TagRecord() {
        super(TagTb.QA_TAG);
    }

    /**
     * Create a detached, initialised TagRecord
     */
    public TagRecord(Long id, String tagName, Long categoryId, UInteger sortNum, UInteger tagStatus, LocalDateTime createTime, LocalDateTime updateTime, String creator) {
        super(TagTb.QA_TAG);

        setId(id);
        setTagName(tagName);
        setCategoryId(categoryId);
        setSortNum(sortNum);
        setTagStatus(tagStatus);
        setCreateTime(createTime);
        setUpdateTime(updateTime);
        setCreator(creator);
        resetChangedOnNotNull();
    }
}
