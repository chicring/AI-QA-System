/*
 * This file is generated by jOOQ.
 */
package com.nrapendra.jooq.tables.records;


import com.nrapendra.jooq.tables.NotificationTb;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationRecord extends UpdatableRecordImpl<NotificationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ai_qa_system.sys_notification.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>ai_qa_system.sys_notification.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>ai_qa_system.sys_notification.title</code>. 通知标题
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ai_qa_system.sys_notification.title</code>. 通知标题
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ai_qa_system.sys_notification.content</code>.
     */
    public void setContent(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>ai_qa_system.sys_notification.content</code>.
     */
    public String getContent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ai_qa_system.sys_notification.type</code>.
     */
    public void setType(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>ai_qa_system.sys_notification.type</code>.
     */
    public Integer getType() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>ai_qa_system.sys_notification.status</code>. 状态 1:未读
     * 2:已读
     */
    public void setStatus(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>ai_qa_system.sys_notification.status</code>. 状态 1:未读
     * 2:已读
     */
    public Integer getStatus() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>ai_qa_system.sys_notification.is_deleted</code>. 是否删除 0:
     * 未删除 1: 已删除
     */
    public void setIsDeleted(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>ai_qa_system.sys_notification.is_deleted</code>. 是否删除 0:
     * 未删除 1: 已删除
     */
    public Boolean getIsDeleted() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>ai_qa_system.sys_notification.username</code>. 创建者
     */
    public void setUsername(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>ai_qa_system.sys_notification.username</code>. 创建者
     */
    public String getUsername() {
        return (String) get(6);
    }

    /**
     * Setter for <code>ai_qa_system.sys_notification.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>ai_qa_system.sys_notification.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>ai_qa_system.sys_notification.update_time</code>. 修改时间
     */
    public void setUpdateTime(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>ai_qa_system.sys_notification.update_time</code>. 修改时间
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationRecord
     */
    public NotificationRecord() {
        super(NotificationTb.SYS_NOTIFICATION);
    }

    /**
     * Create a detached, initialised NotificationRecord
     */
    public NotificationRecord(Long id, String title, String content, Integer type, Integer status, Boolean isDeleted, String username, LocalDateTime createTime, LocalDateTime updateTime) {
        super(NotificationTb.SYS_NOTIFICATION);

        setId(id);
        setTitle(title);
        setContent(content);
        setType(type);
        setStatus(status);
        setIsDeleted(isDeleted);
        setUsername(username);
        setCreateTime(createTime);
        setUpdateTime(updateTime);
        resetChangedOnNotNull();
    }
}
