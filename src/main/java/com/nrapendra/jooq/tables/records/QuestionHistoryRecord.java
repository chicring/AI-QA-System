/*
 * This file is generated by jOOQ.
 */
package com.nrapendra.jooq.tables.records;


import com.nrapendra.jooq.tables.QuestionHistoryTb;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * 题目历史记录表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuestionHistoryRecord extends UpdatableRecordImpl<QuestionHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ai_qa_system.qa_question_history.id</code>. 主键ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_question_history.id</code>. 主键ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>ai_qa_system.qa_question_history.username</code>. 用户名
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_question_history.username</code>. 用户名
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ai_qa_system.qa_question_history.question_id</code>.
     * 题目ID
     */
    public void setQuestionId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_question_history.question_id</code>.
     * 题目ID
     */
    public Long getQuestionId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>ai_qa_system.qa_question_history.status</code>. 状态 1:看过
     * 2:已掌握 3:待复习
     */
    public void setStatus(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_question_history.status</code>. 状态 1:看过
     * 2:已掌握 3:待复习
     */
    public Integer getStatus() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>ai_qa_system.qa_question_history.view_count</code>. 浏览次数
     */
    public void setViewCount(UInteger value) {
        set(4, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_question_history.view_count</code>. 浏览次数
     */
    public UInteger getViewCount() {
        return (UInteger) get(4);
    }

    /**
     * Setter for <code>ai_qa_system.qa_question_history.last_view_time</code>.
     * 最近一次查看时间
     */
    public void setLastViewTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_question_history.last_view_time</code>.
     * 最近一次查看时间
     */
    public LocalDateTime getLastViewTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>ai_qa_system.qa_question_history.create_time</code>.
     * 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_question_history.create_time</code>.
     * 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>ai_qa_system.qa_question_history.update_time</code>.
     * 修改时间
     */
    public void setUpdateTime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_question_history.update_time</code>.
     * 修改时间
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>ai_qa_system.qa_question_history.is_deleted</code>. 是否删除
     * 0:未删除 1:已删除
     */
    public void setIsDeleted(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_question_history.is_deleted</code>. 是否删除
     * 0:未删除 1:已删除
     */
    public Boolean getIsDeleted() {
        return (Boolean) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuestionHistoryRecord
     */
    public QuestionHistoryRecord() {
        super(QuestionHistoryTb.QA_QUESTION_HISTORY);
    }

    /**
     * Create a detached, initialised QuestionHistoryRecord
     */
    public QuestionHistoryRecord(Long id, String username, Long questionId, Integer status, UInteger viewCount, LocalDateTime lastViewTime, LocalDateTime createTime, LocalDateTime updateTime, Boolean isDeleted) {
        super(QuestionHistoryTb.QA_QUESTION_HISTORY);

        setId(id);
        setUsername(username);
        setQuestionId(questionId);
        setStatus(status);
        setViewCount(viewCount);
        setLastViewTime(lastViewTime);
        setCreateTime(createTime);
        setUpdateTime(updateTime);
        setIsDeleted(isDeleted);
        resetChangedOnNotNull();
    }
}
