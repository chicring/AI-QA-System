/*
 * This file is generated by jOOQ.
 */
package com.nrapendra.jooq.tables.records;


import com.nrapendra.jooq.tables.CategoryTb;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * 题目分类表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryRecord extends UpdatableRecordImpl<CategoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ai_qa_system.qa_category.id</code>. 主键ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_category.id</code>. 主键ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>ai_qa_system.qa_category.category_name</code>. 分类名称
     */
    public void setCategoryName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_category.category_name</code>. 分类名称
     */
    public String getCategoryName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ai_qa_system.qa_category.category_level</code>. 标签层级
     * 1:一级标签 2:二级标签
     */
    public void setCategoryLevel(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_category.category_level</code>. 标签层级
     * 1:一级标签 2:二级标签
     */
    public UInteger getCategoryLevel() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>ai_qa_system.qa_category.category_status</code>. 状态 1:正常
     * 0:禁用
     */
    public void setCategoryStatus(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_category.category_status</code>. 状态 1:正常
     * 0:禁用
     */
    public UInteger getCategoryStatus() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>ai_qa_system.qa_category.image_url</code>. 图标连接
     */
    public void setImageUrl(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_category.image_url</code>. 图标连接
     */
    public String getImageUrl() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ai_qa_system.qa_category.description</code>. 描述
     */
    public void setDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_category.description</code>. 描述
     */
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ai_qa_system.qa_category.parent_category_id</code>.
     * 父分类ID
     */
    public void setParentCategoryId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_category.parent_category_id</code>.
     * 父分类ID
     */
    public Long getParentCategoryId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>ai_qa_system.qa_category.sort_num</code>. 排序号
     */
    public void setSortNum(UInteger value) {
        set(7, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_category.sort_num</code>. 排序号
     */
    public UInteger getSortNum() {
        return (UInteger) get(7);
    }

    /**
     * Setter for <code>ai_qa_system.qa_category.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_category.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>ai_qa_system.qa_category.update_time</code>. 修改时间
     */
    public void setUpdateTime(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_category.update_time</code>. 修改时间
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>ai_qa_system.qa_category.creator</code>. 创建者
     */
    public void setCreator(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>ai_qa_system.qa_category.creator</code>. 创建者
     */
    public String getCreator() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CategoryRecord
     */
    public CategoryRecord() {
        super(CategoryTb.QA_CATEGORY);
    }

    /**
     * Create a detached, initialised CategoryRecord
     */
    public CategoryRecord(Long id, String categoryName, UInteger categoryLevel, UInteger categoryStatus, String imageUrl, String description, Long parentCategoryId, UInteger sortNum, LocalDateTime createTime, LocalDateTime updateTime, String creator) {
        super(CategoryTb.QA_CATEGORY);

        setId(id);
        setCategoryName(categoryName);
        setCategoryLevel(categoryLevel);
        setCategoryStatus(categoryStatus);
        setImageUrl(imageUrl);
        setDescription(description);
        setParentCategoryId(parentCategoryId);
        setSortNum(sortNum);
        setCreateTime(createTime);
        setUpdateTime(updateTime);
        setCreator(creator);
        resetChangedOnNotNull();
    }
}
